/*	----------------------------------------------------------------------------
	
	B U T T O N

	Button component defines a clickable component. 

	@author: David Kurnia Kristiadi
	@source: N/A

----------------------------------------------------------------------------  */

/*	----------------------------
	VARIABLES
----------------------------  */

$button-themes				: $theme-colors;
$button-border				: solid 1px gray(200);
$button-color				: gray(100);
$button-font-weight			: font-weight(semibold);

$button-border-radius			: $border-radius;
$button-border-radius-is-pill	: $border-radius-is-pill;
$button-border-radiuses			: $border-radiuses;

$button-padding-y			: 0.75rem;
$button-padding-x			: 1.25rem;
$button-padding				: $button-padding-y $button-padding-x;
$button-paddings			: (
	x-small					: ($button-padding-y * .5) ($button-padding-x * .5),
	small					: ($button-padding-y * .75) ($button-padding-x * .75),
	base					: ($button-padding-y) ($button-padding-x),
	large					: ($button-padding-y * 1.5) ($button-padding-x * 1.5),
	x-large					: ($button-padding-y * 2) ($button-padding-x * 2)
) !default;

/*	----------------------------
	RULES
----------------------------  */
.button {
	@include transition($transition);
	position: relative;
	font-weight: $button-font-weight;
	text-align: center;
	white-space: nowrap;
	vertical-align: middle;
	background: transparent;
	border: $button-border;
	border-radius: $button-border-radius;
	color: $button-color;
	padding: $button-padding;
	cursor: pointer;
	
	/*	Generates color modifier classes for Button component */
	@each $theme, $color in $button-themes {
		&--#{$theme} {	
			background-color: $color;
			color: color-yiq($color);
			border: solid 1px $color;

			&.button--is-outlined {
				border: solid 1px $color;
				color: $color;
				background: none;

				&:hover {
					background: $color;
					color: color-yiq($color);
					border: solid 1px $color;
				}
			}

			&:hover {
				background-color: tint($color, 16%);
			}
		}
	}

	/*	
	**	Generates size modifier classes for Button component calculated
	**	by padding size. 
	*/
	@each $size, $padding in $button-paddings {
		&--#{$size} {
			font-size: font-size($size);
			padding: $padding;
		}
	}

	/*
	**	Generates shape modifier classes for Button component based on
	**	border radius size.
	*/
	&--is-pill {
		border-radius: $button-border-radius-is-pill;
	}

	/*
	**	Make a Button component spans over the width of its parent.
	*/
	&--is-full-width {
		width: 100%;
	}
}

//-----------------------------------------------------------------------------
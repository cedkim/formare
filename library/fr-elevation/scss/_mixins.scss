@import './variables';

@mixin fr-create-elevation-classes() {
  @for $i from 1 through $fr-elevation-max-level {
    $elevation-level: $i;

    .Elevation-#{$i} {
      @include fr-create-elevation($elevation-level);
    }
  }
}

/**
 *
 * @param {Number} $elevation-level
 * @param {Number} $opacity
 */
@mixin fr-create-elevation(
  $level: $fr-elevation-level,
  $opacity: $fr-elevation-box-shadow-color-opacity,
  $color: $fr-elevation-box-shadow-color-value
) {
  $elevation-color: $color;
  $elevation-level: $level;
  $elevation-opacity: $opacity;

  $elevation-offset-x: $fr-elevation-box-shadow-offset-x;
  $elevation-offset-y: $fr-elevation-box-shadow-offset-y;
  $elevation-spread: $fr-elevation-box-shadow-spread;
  $elevation-blur: $fr-elevation-box-shadow-blur;

  $elevation-values-list: $elevation-offset-x $elevation-offset-y $elevation-blur $elevation-spread;

  $updated-elevation-values: () !default;
  @each $var in $elevation-values-list {
    $var: $var * $elevation-level;
    $updated-elevation-values: append($updated-elevation-values, $var);
  }

  $elevation-box-shadow-color: rgba(black, $elevation-opacity);
  $elevation-box-shadow: append($updated-elevation-values, $elevation-box-shadow-color) !default;
  // Generate the correct box-shadow value based on the calculation above
  box-shadow: $elevation-box-shadow;
}

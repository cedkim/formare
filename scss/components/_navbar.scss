$navbar-transition: $transition !default;
$navbar-background: $white !default;
$navbar-color: color-yiq($navbar-background);
$navbar-hovered-color: $primary-color; 
$navbar-height: 4em;
$navbar-sizes: () !default;
$navbar-sizes: map-merge((
	x-small: ($navbar-height * .5),
	small: ($navbar-height * .75),
	base: ($navbar-height * 1),
	large: ($navbar-height * 1.5),
	x-large: ($navbar-height * 2)
), $navbar-sizes);

.navbar {
	position: relative;
	height: $navbar-height;
	min-height: $navbar-height;
	transition: $navbar-transition;
	background: $navbar-background;

	&__container {
		@extend .container;
		display: flex;
		justify-content: space-between;
		height: 100%;

		&--full-width {
			@extend .container--full-width;
		}
	}
	
	&__block {
		position: relative;
		display: flex;
		flex: 1 1 auto;
		align-items: center;
		height: 100%;

		&--start { justify-content: flex-start; }
		&--center { justify-content: center; }
		&--end { justify-content: flex-end; }
	}

	.nav {
		display: flex;
		height: 100%;

		.nav {
			&__list {
				display: flex;
				flex-direction: row;
				flex: 1;
			}
			
			&__item {
				display: flex;
				
				&:hover {
					.nav__link {
						color: $navbar-hovered-color;
					}
				}
			}
			
			&__link {
				display: flex;
				flex: 1;
				align-items: center;
				padding-top: 0;
				padding-bottom: 0;
				color: $navbar-color;
			}

		}

	}

	@each $theme, $color in $theme-colors {
		&--#{$theme} {
			background-color: $color;
			color: color-yiq($color);

			.nav {
				.nav {
					&__item {
						&:hover {
							.nav__link {
								color: rgba(color-yiq($color), 1);		
							}
						}
					}
	
					&__link {
						transition: $transition;
						color: rgba(color-yiq($color), 0.7);	
					}
				}
			}
		}
	}
	
	@each $size, $value in $navbar-sizes {
		&--#{$size} {
			height: $value;
			min-height: $value;
		}
	}
}
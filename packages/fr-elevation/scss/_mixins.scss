@import './variables';

@mixin fr-create-elevation-classes() {
  @for $i from 1 through $fr-elevation-max-level {
    $elevation-level: $i;

    .Elevation\:#{$i} {
      @include fr-create-elevation($elevation-level);
    }
  }
}

/**
 *
 * @param {Number} $elevation-level
 * @param {Number} $opacity
 */
@mixin fr-create-elevation(
  $elevation-level: $fr-elevation-level,
  $opacity: $fr-elevation-shadow-opacity,
  $color-theme: $fr-elevation-shadow-color-theme
) {
  $shadow-multiplier: $fr-elevation-shadow-multiplier;
  $shadow-color-opacity: $opacity;
  $shadow-color-value: fr-color-theme($color-theme);

  // Convert level into offset-y value in `em` unit.
  $shadow-offset-x: $fr-elevation-shadow-offset-x;
  $shadow-offset-y: $elevation-level * 0.1em;
  $shadow-blur: $shadow-offset-y * $shadow-multiplier;
  $shadow-spread: $fr-elevation-shadow-spread;

  $shadow-set: $shadow-offset-x $shadow-offset-y $shadow-blur $shadow-spread;
  $computed-shadow-color: rgba($shadow-color-value, $shadow-color-opacity);

  // Generate the correct box-shadow value based on the calculation above
  box-shadow: $shadow-set $computed-shadow-color;
}

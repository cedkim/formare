$hero-themes: $theme-colors;
$hero-height: 25em;

$hero-heights: () !default;
$hero-heights: map-merge((
	x-small: ($hero-height * 0.5),
	small: ($hero-height * 0.75),
	base: ($hero-height * 1),
	large: ($hero-height * 1.5),
	x-large: ($hero-height * 2)
), $hero-heights);

.hero {
	position: relative;
	display: flex;
	flex-direction: column;
	min-height: $hero-height;

	&__bg {
		position: absolute;
		top: 0;
		left: 0;
		height: 100%;
		width: 100%;
		z-index: 250;
		background-position: center;
		background-size: cover;
	}

	&__body {
		flex: 1;
		height: 100%;
		padding-top: spacing(x-large);
		padding-bottom: spacing(x-large);
		
		&--centerized {
			display: flex;
			align-items: center;
			justify-content: center;
		}
	}
	
	> *:not(.hero__bg),
	&__body {
		position: relative;
		z-index: 500;
	}
	
	@each $size, $height in $hero-heights {
		&--#{$size} {
			min-height: $height;
		}
	}
	
	@each $theme, $color in $hero-themes {
		&--#{$theme} {
			background-color: $color;
			color: color-yiq($color);

			.hero__bg {
				&:before {
					content: "";
					position: absolute;
					top: 0;
					left: 0;
					height: 100%;
					width: 100%;
					background-color: $color;
					opacity: 0.7;
				}
			}
		}
	}

	/**
	 *	A modifier class to make your hero layout spans over your entire viewport
	 *	vertically.
	 */
	&--full-height {
		height: 100vh;
		min-height: 100vh;
	}
}
{"version":3,"sources":["webpack:///./src/templates/docs.template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/layout/main-header.js","webpack:///./src/layout/main-layout.js","webpack:///./src/layout/docs/docs-menu.js","webpack:///./src/layout/docs/docs-layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layout_docs_docs_layout__WEBPACK_IMPORTED_MODULE_1__","DocsTemplate","_ref","markdownRemark","data","html","frontmatter","a","createElement","className","title","description","dangerouslySetInnerHTML","__html","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","MainHeader","siteTitle","react_default","main_header_NavbarBrand","main_header_NavbarMenu","NavbarBrand","gatsby_browser_entry","to","NavbarMenu","defaultProps","Main","children","Fragment","main_header","node","DocsMenu","activeClassName","DocsLayout","main_layout","docs_menu"],"mappings":"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","file":"component---src-templates-docs-template-js-662cff06f9fefdbfe5f3.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport DocsLayout from '../layout/docs/docs-layout';\n\nconst DocsTemplate = ({ data }) => {\n  const { markdownRemark } = data;\n  const { html, frontmatter } = markdownRemark;\n\n  return (\n    <DocsLayout>\n      <div className=\"Container\">\n        <div className=\"DocsContent-heading\">\n          <h2 className=\"u-FontWeight-bold\">{frontmatter.title}</h2>\n          <h5 className=\"u-Color-gray\">{frontmatter.description}</h5>\n        </div>\n        <div className=\"DocsContent-heading\">\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        </div>\n      </div>\n    </DocsLayout>\n  );\n};\n\nexport const query = graphql`\n  query DocsByPath($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        description\n      }\n    }\n  }\n`;\n\nexport default DocsTemplate;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MainHeader = ({ siteTitle }) => {\n  return (\n    <header className=\"MainHeader\">\n      <div className=\"Navbar Navbar--primary\">\n        <div className=\"Container Container--fullWidth u-Flex u-Flex-row\">\n          <NavbarBrand />\n          <NavbarMenu />\n        </div>\n      </div>\n    </header>\n  );\n};\n\nconst NavbarBrand = () => (\n  <div className=\"Navbar-block\">\n    <Link\n      to=\"/\"\n      className=\"u-FontSize-xlarge u-FontWeight-semibold u-Color-light\">\n      Formare\n    </Link>\n  </div>\n);\n\nconst NavbarMenu = () => {\n  return (\n    <div className=\"Navbar-block\">\n      <nav className=\"Nav\" />\n    </div>\n  );\n};\n\n// gatsby-initial\n//\n// const Header = ({ siteTitle }) => (\n//   <header\n//     style={{\n//       background: `rebeccapurple`,\n//       marginBottom: `1.45rem`,\n//     }}\n//   >\n//     <div\n//       style={{\n//         margin: `0 auto`,\n//         maxWidth: 960,\n//         padding: `1.45rem 1.0875rem`,\n//       }}\n//     >\n//       <h1 style={{ margin: 0 }}>\n//         <Link\n//           to=\"/\"\n//           style={{\n//             color: `white`,\n//             textDecoration: `none`,\n//           }}\n//         >\n//           {siteTitle}\n//         </Link>\n//       </h1>\n//     </div>\n//   </header>\n// )\n\nMainHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nMainHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default MainHeader;\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { StaticQuery, graphql, useStaticQuery } from 'gatsby';\nimport MainHeader from './main-header';\nimport MainFooter from './main-footer';\nimport '../scss/formare-docs.scss';\n\nconst Main = ({ children }) => {\n  // const { title } = useStaticQuery(graphql`\n  //   query SiteTitleQuery {\n  //     site {\n  //       siteMetadata {\n  //         title\n  //       }\n  //     }\n  //   }\n  // `);\n\n  return (\n    <>\n      <MainHeader />\n      <main>{children}</main>\n      {/* <MainFooter /> */}\n    </>\n  );\n};\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Main;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './docs.scss';\n\nconst DocsMenu = () => {\n  return (\n    <aside className=\"DocsMenu\">\n      <ul className=\"DocsMenu-list\">\n        <li className=\"DocsMenu-item\">\n          <Link\n            className=\"DocsMenu-link\"\n            to=\"/docs/getting-started\"\n            activeClassName=\"is-active\">\n            Getting Started\n          </Link>\n        </li>\n        <li className=\"DocsMenu-item\">\n          <Link className=\"DocsMenu-link\" to=\"/docs/quick-start\">\n            Quick Start\n          </Link>\n        </li>\n      </ul>\n    </aside>\n  );\n};\n\nexport default DocsMenu;\n","import React from 'react';\nimport MainLayout from '../main-layout';\nimport DocsMenu from './docs-menu';\nimport './docs.scss';\n\nconst DocsLayout = ({ children }) => {\n  return (\n    <MainLayout>\n      <div className=\"Docs\">\n        <DocsMenu />\n        <article className=\"DocsContent\">{children}</article>\n      </div>\n    </MainLayout>\n  );\n};\n\nexport default DocsLayout;\n"],"sourceRoot":""}